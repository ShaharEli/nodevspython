version: "2.2"

services:
  nodeapp:
    build:
      context: "./nodeapp"
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: .
        target: /nodeapp
    command: sh -c '/nodeapp/wait_for_it.sh mysql:3306 && npm run docker'
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_DATABASE=test
    networks:
      frontapp_a:
        ipv4_address: 172.22.0.9
    depends_on:
      - mysql
  app:
    build:
      context: "."
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - type: bind
        source: .
        target: /app
    command: sh -c '/app/app/wait_for_it.sh mysql:3306 && /start-reload.sh'
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_DATABASE=test

    networks:
      frontapp_a:
        ipv4_address: 172.22.0.11
    depends_on:
      - mysql

  mysql:
    image: mysql:8
    container_name: mysql
    hostname: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_DATABASE=test

    networks:
      frontapp_a:
        ipv4_address: 172.22.0.10

networks:
  frontapp_a:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
